package com.ukhvat.notes.data.database

import androidx.room.*
import kotlinx.coroutines.flow.Flow

/**
 * üì¶ DAO –î–õ–Ø –°–û–î–ï–†–ñ–ò–ú–û–ì–û –ó–ê–ú–ï–¢–û–ö
 * 
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—è–∂–µ–ª—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∑–∞–º–µ—Ç–æ–∫ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.
 * –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ (–æ—Ç–∫—Ä—ã—Ç–∏–µ –∑–∞–º–µ—Ç–∫–∏, –ø–æ–∏—Å–∫).
 * 
 * Batch operations and optimizations:
 * 1. **Batch CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏** - –º–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * 2. **JOIN optimization** - searchNotesWithContent() combines metadata and content in single query (2x faster)
 * 3. **Batch –ø–æ–ª—É—á–µ–Ω–∏–µ** - getContentByIds() –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–∞–º–µ—Ç–æ–∫
 * 
 * –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:
 * - Foreign Key CASCADE –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–º–µ—Ç–∫–∏
 * - –û—Ç–¥–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–æ–≤
 * - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ FTS (Full-Text Search) –∏–Ω–¥–µ–∫—Å–∞–º –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–æ–ª—å—à–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö
 * 
 * @see NoteMetadataDao –ü–∞—Ä–Ω—ã–π DAO –¥–ª—è –ª–µ–≥–∫–∏—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö  
 * @see NoteWithContentEntity JOIN entity –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
 */
@Dao
interface NoteContentDao {
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∑–∞–º–µ—Ç–∫–∏
     */
    @Query("SELECT * FROM note_content WHERE noteId = :noteId")
    suspend fun getContentById(noteId: Long): NoteContentEntity?

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–∫ Flow –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
     */
    @Query("SELECT * FROM note_content WHERE noteId = :noteId")
    fun getContentByIdFlow(noteId: Long): Flow<NoteContentEntity?>

    /**
     * –ü–æ–∏—Å–∫ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –∑–∞–º–µ—Ç–æ–∫ (legacy –º–µ—Ç–æ–¥)
     * 
     * Important: Excludes deleted notes (isDeleted = 0) for proper UX.
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç JOIN —Å metadata –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫.
     * 
     * –ë—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ FTS –∏–Ω–¥–µ–∫—Å—ã –≤ –±—É–¥—É—â–µ–º
     */
    @Query("""
        SELECT nc.* FROM note_content nc
        INNER JOIN note_metadata m ON nc.noteId = m.id
        WHERE nc.content LIKE '%' || :query || '%'
        AND m.isDeleted = 0
    """)
    suspend fun searchByContent(query: String): List<NoteContentEntity>

    /**
     * Optimized search with JOIN
     * 
     * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ –≤–º–µ—Å—Ç–æ –¥–≤—É—Ö –æ—Ç–¥–µ–ª—å–Ω—ã—Ö.
     * –≠—Ç–æ –≤ 2 —Ä–∞–∑–∞ –±—ã—Å—Ç—Ä–µ–µ —á–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ–¥—Ö–æ–¥ —Å searchByContent + getMetadataByIds.
     * 
     * Important: Excludes deleted notes (isDeleted = 0) for proper UX.
     * 
     * @param query –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è LIKE –ø–æ–∏—Å–∫–∞
     * @return –°–ø–∏—Å–æ–∫ –ê–ö–¢–ò–í–ù–´–• –∑–∞–º–µ—Ç–æ–∫ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    @Query("""
        SELECT m.id, m.title, m.createdAt, m.updatedAt, m.characterCount, m.isFavorite, c.content
        FROM note_metadata m 
        INNER JOIN note_content c ON m.id = c.noteId 
        WHERE c.content LIKE '%' || :query || '%' 
        AND m.isDeleted = 0 AND m.isArchived = 0
        ORDER BY m.updatedAt DESC
    """)
    suspend fun searchNotesWithContent(query: String): List<NoteWithContentEntity>

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–∞–º–µ—Ç–æ–∫ (–¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞/–ø–æ–∏—Å–∫–∞)
     * –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ isDeleted –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ getMetadataByIds()
     */
    @Query("SELECT * FROM note_content WHERE noteId IN (:noteIds)")
    suspend fun getContentByIds(noteIds: List<Long>): List<NoteContentEntity>

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–æ–∫ –ë–ï–ó —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–æ—Ä–∑–∏–Ω–µ (–¥–ª—è TrashDataSource)
     * 
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ.
     * –≠—Ç–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è getContentByIds() –±–µ–∑ JOIN —Å isDeleted —Ñ–∏–ª—å—Ç—Ä–æ–º.
     */
    @Query("SELECT * FROM note_content WHERE noteId IN (:noteIds)")
    suspend fun getContentByIdsIncludingDeleted(noteIds: List<Long>): List<NoteContentEntity>

    /**
     * –°–æ–∑–¥–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
     */
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertContent(content: NoteContentEntity)

    /**
     * Batch operation: bulk content creation
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –∑–∞–º–µ—Ç–æ–∫
     */
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertContentBatch(content: List<NoteContentEntity>)

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏
     */
    @Update
    suspend fun updateContent(content: NoteContentEntity)

    /**
     * Batch operation: bulk content update
     * –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
     */
    @Update
    suspend fun updateContentBatch(content: List<NoteContentEntity>)

    /**
     * –£–¥–∞–ª–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–º–µ—Ç–∫–∏
     */
    @Query("DELETE FROM note_content WHERE noteId = :noteId")
    suspend fun deleteContentById(noteId: Long)

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ (–¥–ª—è database preloading)
     */
    @Query("SELECT COUNT(*) FROM note_content")
    suspend fun getContentCount(): Int

    /**
     * –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
     */
    @Query("SELECT * FROM note_content")
    fun getAllContentSync(): List<NoteContentEntity>

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun insertContentSync(content: NoteContentEntity)


}